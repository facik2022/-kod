---
- name: Install
  hosts: docker
  #become: yes
  gather_facts: yes
  tasks:
  - name: WORKSPACE SHOW
    debug:
      var: WORKSPACE

  # - name: Create Dir
  #   file:
  #     path: '~/ansible'
  #     state: directory

  - name: delete
    file:
      path: "ansible/node"
      state: absent

  - name: create
    file:
      path: "ansible/node"
      state: directory



  # - name: Unarchive a file that is already on the remote machine
  #   unarchive:
  #     src: https://nodejs.org/dist/v14.17.2/node-v14.17.2-linux-x64.tar.xz
  #     dest: 'ansible/node/'
  #     remote_src: yes

  - name: Download foo.conf
    get_url:
      url: https://nodejs.org/dist/v14.17.2/node-v14.17.2-linux-x64.tar.xz
      dest: ansible/node/nodejs.tar.xz
    #mode: '0440'
#- file:
#    path: /opt/nodejs
#    state: directory

  # - name: Unarchive a file that is already on the remote machine
  #   unarchive:
  #     src: ansible/node/nodejs.tar.xz
  #     dest:  ansible/node
  #     remote_src: yes

  - name: shell tar
    shell: 'cd ~/ansible/node/ && tar xvf nodejs.tar.xz'


  - name: shell
    shell: 'ls -li ansible/node '

  - name: shell npm
    shell: |
      export PATH=$PATH:/root/ansible/node/node-v14.17.2-linux-x64/bin
      cd {{ WORKSPACE }}/code/front2
      npm install
      npm run build
      ls {{ WORKSPACE }}/code/front2/dist

  - name: Delete old main.js
    file:
      path: '{{ WORKSPACE }}/code/back2/static/main.js'

  - name: copy
    copy:
      src: '{{ WORKSPACE }}/code/front2/dist/main.js'
      dest: '{{ WORKSPACE }}/code/back2/static/main.js'
      remote_src: yes


  roles:
    - name: Install nodejs
      role: nodejs
#  - name virtualenv
#  - name Установить зависимости  requirements.txt


#  - name: Создание из шаблона службы systemd
#  - name: Запуск systemd reload можно через hanlder
#  - name:



# - n name: add  to path
#   lineinfile:
#     dest: '/root/.profile'
#     state: present
#     line: 'export PATH=$PATH:/opt/node-v14.17.2-linux-x64/bin'

  #roles:
    # # - name: Install nodejs
    # #   role: nodejs
    # # - name: build-and-deploy
    # #   tasks_from: pre
    #
    # - name: build-and-deploy
    #   role: build-and-deploy

  # - name: Get OS type
  #   debug:
  #     var: ansible_facts.distribution
  # - name: Update repositories cache and install  package
  #   apt:
  #     name: '{{ item }}'
  #     update_cache: yes
  #   with_items: '{{ package_list }}'
  #
  # - name: Create Dir
  #   file:
  #     path: '~/ansible'
  #     state: directory


#    when: ansible_facts.distribution=='Ubuntu'
  # - name: Print all available facts
  #   ansible.builtin.debug:
  #     var: ansible_facts
